#!/usr/bin/env python3

from argparse import ArgumentParser
import logging
from os.path import realpath, dirname
import sys

# These lines are required so I can use the mev module
SCRIPT_DIR = dirname(realpath(__file__))
sys.path.append(SCRIPT_DIR + "mev/")

import mev.tips
import mev.insertion

log = logging.getLogger(__name__)


def parse_args():
    parser = ArgumentParser()
    parser.add_argument(
        "-l",
        "--log-level",
        type=str,
        help="The log level to be written to stdout.",
        default="INFO",
        choices=["DEBUG", "INFO", "WARN", "ERROR", "CRITICAL"],
    )
    subparsers = parser.add_subparsers()
    parser_tips = subparsers.add_parser(
        "tips", help="Analyzing tips (gas fees and mining rewards)."
    )
    parser_tips.set_defaults(func=mev.tips.calculate_tip_arg)
    parser_tips.add_argument(
        "data_file",
        type=str,
        help="Path to file containing blocks/transactions to analyze",
    )

    parser_detection = subparsers.add_parser(
        "detection", help="Tools for detecting insertion attacks."
    )
    parser_detection.set_defaults(func=mev.insertion.main_args)
    parser_detection.add_argument(
        "block_range_start",
        type=int,
        help="The first block in the block range to analyze",
    )
    parser_detection.add_argument(
        "block_range_end",
        type=int,
        help="The last block in the block range to analyze",
    )

    return parser.parse_args()


def main():
    args = parse_args()
    logging.basicConfig(stream=sys.stdout, filemode="w", level=args.log_level.upper())

    args.func(args)

    # tip = mev.tips.calcuate_tip(args.data_file)
    # print(tip)


if __name__ == "__main__":
    main()
